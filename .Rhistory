# glue::glue("You're {syn('inspiring', 1)} {name}{punctuation}"),
# glue::glue("{name}, you could survive a {syn('zombie', 1)} apocalypse{punctuation}"),
# glue::glue("Your {syn('creative', 1)} potential seems limitless, {name}{punctuation}"),
# glue::glue("Everyone gets knocked down sometimes {name}; only people like you get back up and keep going{punctuation}"),
# glue::glue("{name}, you are making a {syn('difference', 1)}{punctuation}"),
# glue::glue("{name}, you're an {syn('awesome', 1)} friend{punctuation}"),
# glue::glue("Someone is getting through something really hard right now, because {name}, you've got their back{punctuation}"),
# glue::glue("{name}, you're a gift that keeps on giving{punctuation}"),
# glue::glue("{name}, you are {syn('enough', 1)}{punctuation}"),
# glue::glue("You're all that {name}, plus a super sized bag of {syn('chips', 1)}{punctuation}"),
# glue::glue("{name}, you're even better than a {syn('unicorn', 1)} because you're real{punctuation}"),
# glue::glue("How {syn('amazing', 1)} are you, {name}{punctuation}")),
size=1, replace = FALSE)
compliment
}
praise("Aris", "!")
# devtools::install_github("ropenscilabs/syn")  # R package that lists synonyms and antonyms
library(syn)
library(glue)
library(crayon) # for coloring output. supported colors: black, red, green, yellow, blue, magenta, cyan, white, silver (usually calledgray, renamed to avoid name clash)
praise <- function (name, punctuation = "!") {
compliment <- sample(c(glue::glue_col("{blue You're the {syn('best', 1)}, {name}{punctuation}}"),
glue::glue_col("{red You {syn('shine', 1)} brighter than a diamond, {name}{punctuation}}")),
# glue::glue("{name}, the world is that much {syn('better', 1)} with you in it{punctuation}"),
# glue::glue("I appreciate the {syn('effort', 1)} you put in today {name}. Well done{punctuation}"),
# glue::glue("There will never be another {name} {syn('like', 1)} you{punctuation}"),
# glue::glue("{name}, when I think of defining {syn('perfection', 1)}, only you come to mind{punctuation}"),
# glue::glue("The word {syn('wholesome', 1)} is synonymous with {name}{punctuation}"),
# glue::glue("{name}, you make me so {syn('happy', 1)} to be alive{punctuation}"),
# glue::glue("Your smile is {syn('contagious', 1)}, {name}{punctuation}"),
# glue::glue("{name}, you're such a {syn('beautiful', 1)} soul{punctuation}"),
# glue::glue("{name}, you should be so {syn('proud', 1)} of yourself{punctuation}"),
# glue::glue("You make a difference in this {syn('world', 1)}, {name}{punctuation}"),
# glue::glue("{name}, your {syn('kindness', 1)} is a balm to all whom encounter it{punctuation}"),
# glue::glue("{name}, I think you're {syn('perfect', 1)} just the way you are{punctuation}"),
# glue::glue("{name}, you're like {syn('sunshine', 1)} on a rainy day{punctuation}"),
# glue::glue("{name}, being around you is like a {syn('happy', 1)} vacation{punctuation}"),
# glue::glue("You're someones reason to {syn('smile', 1)}, {name}{punctuation}"),
# glue::glue("{name}, that thing you don't like about yourself is what makes you {syn('super', 1)} interesting{punctuation}"),
# glue::glue("You're {syn('inspiring', 1)} {name}{punctuation}"),
# glue::glue("{name}, you could survive a {syn('zombie', 1)} apocalypse{punctuation}"),
# glue::glue("Your {syn('creative', 1)} potential seems limitless, {name}{punctuation}"),
# glue::glue("Everyone gets knocked down sometimes {name}; only people like you get back up and keep going{punctuation}"),
# glue::glue("{name}, you are making a {syn('difference', 1)}{punctuation}"),
# glue::glue("{name}, you're an {syn('awesome', 1)} friend{punctuation}"),
# glue::glue("Someone is getting through something really hard right now, because {name}, you've got their back{punctuation}"),
# glue::glue("{name}, you're a gift that keeps on giving{punctuation}"),
# glue::glue("{name}, you are {syn('enough', 1)}{punctuation}"),
# glue::glue("You're all that {name}, plus a super sized bag of {syn('chips', 1)}{punctuation}"),
# glue::glue("{name}, you're even better than a {syn('unicorn', 1)} because you're real{punctuation}"),
# glue::glue("How {syn('amazing', 1)} are you, {name}{punctuation}")),
size=1, replace = FALSE)
compliment
}
praise("Aris", "!")
# devtools::install_github("ropenscilabs/syn")  # R package that lists synonyms and antonyms
library(syn)
library(glue)
library(crayon) # for coloring output. supported colors: black, red, green, yellow, blue, magenta, cyan, white, silver (usually calledgray, renamed to avoid name clash)
praise <- function (name, punctuation = "!") {
compliment <- sample(c(glue::glue_col("{blue You're the {syn('best', 1)}, {name}{punctuation}}"),
glue::glue_col("{red You {syn('shine', 1)} brighter than a diamond, {name}{punctuation}}")),
# glue::glue("{name}, the world is that much {syn('better', 1)} with you in it{punctuation}"),
# glue::glue("I appreciate the {syn('effort', 1)} you put in today {name}. Well done{punctuation}"),
# glue::glue("There will never be another {name} {syn('like', 1)} you{punctuation}"),
# glue::glue("{name}, when I think of defining {syn('perfection', 1)}, only you come to mind{punctuation}"),
# glue::glue("The word {syn('wholesome', 1)} is synonymous with {name}{punctuation}"),
# glue::glue("{name}, you make me so {syn('happy', 1)} to be alive{punctuation}"),
# glue::glue("Your smile is {syn('contagious', 1)}, {name}{punctuation}"),
# glue::glue("{name}, you're such a {syn('beautiful', 1)} soul{punctuation}"),
# glue::glue("{name}, you should be so {syn('proud', 1)} of yourself{punctuation}"),
# glue::glue("You make a difference in this {syn('world', 1)}, {name}{punctuation}"),
# glue::glue("{name}, your {syn('kindness', 1)} is a balm to all whom encounter it{punctuation}"),
# glue::glue("{name}, I think you're {syn('perfect', 1)} just the way you are{punctuation}"),
# glue::glue("{name}, you're like {syn('sunshine', 1)} on a rainy day{punctuation}"),
# glue::glue("{name}, being around you is like a {syn('happy', 1)} vacation{punctuation}"),
# glue::glue("You're someones reason to {syn('smile', 1)}, {name}{punctuation}"),
# glue::glue("{name}, that thing you don't like about yourself is what makes you {syn('super', 1)} interesting{punctuation}"),
# glue::glue("You're {syn('inspiring', 1)} {name}{punctuation}"),
# glue::glue("{name}, you could survive a {syn('zombie', 1)} apocalypse{punctuation}"),
# glue::glue("Your {syn('creative', 1)} potential seems limitless, {name}{punctuation}"),
# glue::glue("Everyone gets knocked down sometimes {name}; only people like you get back up and keep going{punctuation}"),
# glue::glue("{name}, you are making a {syn('difference', 1)}{punctuation}"),
# glue::glue("{name}, you're an {syn('awesome', 1)} friend{punctuation}"),
# glue::glue("Someone is getting through something really hard right now, because {name}, you've got their back{punctuation}"),
# glue::glue("{name}, you're a gift that keeps on giving{punctuation}"),
# glue::glue("{name}, you are {syn('enough', 1)}{punctuation}"),
# glue::glue("You're all that {name}, plus a super sized bag of {syn('chips', 1)}{punctuation}"),
# glue::glue("{name}, you're even better than a {syn('unicorn', 1)} because you're real{punctuation}"),
# glue::glue("How {syn('amazing', 1)} are you, {name}{punctuation}")),
size=1, replace = FALSE)
compliment
}
praise("Aris", "!")
# devtools::install_github("ropenscilabs/syn")  # R package that lists synonyms and antonyms
library(syn)
library(glue)
library(crayon) # for coloring output. supported colors: black, red, green, yellow, blue, magenta, cyan, white, silver (usually calledgray, renamed to avoid name clash)
praise <- function (name, punctuation = "!") {
compliment <- sample(c(glue::glue_col("{blue You're the {syn('best', 1)}, {name}{punctuation}}"),
glue::glue_col("{red You {syn('shine', 1)} brighter than a diamond, {name}{punctuation}}")),
# glue::glue("{name}, the world is that much {syn('better', 1)} with you in it{punctuation}"),
# glue::glue("I appreciate the {syn('effort', 1)} you put in today {name}. Well done{punctuation}"),
# glue::glue("There will never be another {name} {syn('like', 1)} you{punctuation}"),
# glue::glue("{name}, when I think of defining {syn('perfection', 1)}, only you come to mind{punctuation}"),
# glue::glue("The word {syn('wholesome', 1)} is synonymous with {name}{punctuation}"),
# glue::glue("{name}, you make me so {syn('happy', 1)} to be alive{punctuation}"),
# glue::glue("Your smile is {syn('contagious', 1)}, {name}{punctuation}"),
# glue::glue("{name}, you're such a {syn('beautiful', 1)} soul{punctuation}"),
# glue::glue("{name}, you should be so {syn('proud', 1)} of yourself{punctuation}"),
# glue::glue("You make a difference in this {syn('world', 1)}, {name}{punctuation}"),
# glue::glue("{name}, your {syn('kindness', 1)} is a balm to all whom encounter it{punctuation}"),
# glue::glue("{name}, I think you're {syn('perfect', 1)} just the way you are{punctuation}"),
# glue::glue("{name}, you're like {syn('sunshine', 1)} on a rainy day{punctuation}"),
# glue::glue("{name}, being around you is like a {syn('happy', 1)} vacation{punctuation}"),
# glue::glue("You're someones reason to {syn('smile', 1)}, {name}{punctuation}"),
# glue::glue("{name}, that thing you don't like about yourself is what makes you {syn('super', 1)} interesting{punctuation}"),
# glue::glue("You're {syn('inspiring', 1)} {name}{punctuation}"),
# glue::glue("{name}, you could survive a {syn('zombie', 1)} apocalypse{punctuation}"),
# glue::glue("Your {syn('creative', 1)} potential seems limitless, {name}{punctuation}"),
# glue::glue("Everyone gets knocked down sometimes {name}; only people like you get back up and keep going{punctuation}"),
# glue::glue("{name}, you are making a {syn('difference', 1)}{punctuation}"),
# glue::glue("{name}, you're an {syn('awesome', 1)} friend{punctuation}"),
# glue::glue("Someone is getting through something really hard right now, because {name}, you've got their back{punctuation}"),
# glue::glue("{name}, you're a gift that keeps on giving{punctuation}"),
# glue::glue("{name}, you are {syn('enough', 1)}{punctuation}"),
# glue::glue("You're all that {name}, plus a super sized bag of {syn('chips', 1)}{punctuation}"),
# glue::glue("{name}, you're even better than a {syn('unicorn', 1)} because you're real{punctuation}"),
# glue::glue("How {syn('amazing', 1)} are you, {name}{punctuation}")),
size=1, replace = FALSE)
compliment
}
praise("Aris", "!")
glue::glue_col("{blue You're the {syn('best', 1)}, {name}{punctuation}}")
glue::glue_col("{blue You're}")
glue::glue_col("{blue You're}")
glue::glue_col("{red erika}")
glue::glue_col("{red you're}")
glue::glue_col("{red youre}")
# devtools::install_github("ropenscilabs/syn")  # R package that lists synonyms and antonyms
library(syn)
library(glue)
library(crayon) # for coloring output. supported colors: black, red, green, yellow, blue, magenta, cyan, white, silver (usually calledgray, renamed to avoid name clash)
praise <- function (name, punctuation = "!") {
compliment <- sample(c(glue::glue_col("{blue You are the {syn('best', 1)}, {name}{punctuation}}"),
glue::glue_col("{red You {syn('shine', 1)} brighter than a diamond, {name}{punctuation}}")),
# glue::glue("{name}, the world is that much {syn('better', 1)} with you in it{punctuation}"),
# glue::glue("I appreciate the {syn('effort', 1)} you put in today {name}. Well done{punctuation}"),
# glue::glue("There will never be another {name} {syn('like', 1)} you{punctuation}"),
# glue::glue("{name}, when I think of defining {syn('perfection', 1)}, only you come to mind{punctuation}"),
# glue::glue("The word {syn('wholesome', 1)} is synonymous with {name}{punctuation}"),
# glue::glue("{name}, you make me so {syn('happy', 1)} to be alive{punctuation}"),
# glue::glue("Your smile is {syn('contagious', 1)}, {name}{punctuation}"),
# glue::glue("{name}, you're such a {syn('beautiful', 1)} soul{punctuation}"),
# glue::glue("{name}, you should be so {syn('proud', 1)} of yourself{punctuation}"),
# glue::glue("You make a difference in this {syn('world', 1)}, {name}{punctuation}"),
# glue::glue("{name}, your {syn('kindness', 1)} is a balm to all whom encounter it{punctuation}"),
# glue::glue("{name}, I think you're {syn('perfect', 1)} just the way you are{punctuation}"),
# glue::glue("{name}, you're like {syn('sunshine', 1)} on a rainy day{punctuation}"),
# glue::glue("{name}, being around you is like a {syn('happy', 1)} vacation{punctuation}"),
# glue::glue("You're someones reason to {syn('smile', 1)}, {name}{punctuation}"),
# glue::glue("{name}, that thing you don't like about yourself is what makes you {syn('super', 1)} interesting{punctuation}"),
# glue::glue("You're {syn('inspiring', 1)} {name}{punctuation}"),
# glue::glue("{name}, you could survive a {syn('zombie', 1)} apocalypse{punctuation}"),
# glue::glue("Your {syn('creative', 1)} potential seems limitless, {name}{punctuation}"),
# glue::glue("Everyone gets knocked down sometimes {name}; only people like you get back up and keep going{punctuation}"),
# glue::glue("{name}, you are making a {syn('difference', 1)}{punctuation}"),
# glue::glue("{name}, you're an {syn('awesome', 1)} friend{punctuation}"),
# glue::glue("Someone is getting through something really hard right now, because {name}, you've got their back{punctuation}"),
# glue::glue("{name}, you're a gift that keeps on giving{punctuation}"),
# glue::glue("{name}, you are {syn('enough', 1)}{punctuation}"),
# glue::glue("You're all that {name}, plus a super sized bag of {syn('chips', 1)}{punctuation}"),
# glue::glue("{name}, you're even better than a {syn('unicorn', 1)} because you're real{punctuation}"),
# glue::glue("How {syn('amazing', 1)} are you, {name}{punctuation}")),
size=1, replace = FALSE)
compliment
}
praise("Aris", "!")
# devtools::install_github("ropenscilabs/syn")  # R package that lists synonyms and antonyms
library(syn)
library(glue)
library(crayon) # for coloring output. supported colors: black, red, green, yellow, blue, magenta, cyan, white, silver (usually calledgray, renamed to avoid name clash)
praise <- function (name, punctuation = "!") {
compliment <- sample(c(glue::glue_col("{blue You are the {syn('best', 1)}, {name}{punctuation}}"),
glue::glue_col("{red You {syn('shine', 1)} brighter than a diamond, {name}{punctuation}}")),
# glue::glue("{name}, the world is that much {syn('better', 1)} with you in it{punctuation}"),
# glue::glue("I appreciate the {syn('effort', 1)} you put in today {name}. Well done{punctuation}"),
# glue::glue("There will never be another {name} {syn('like', 1)} you{punctuation}"),
# glue::glue("{name}, when I think of defining {syn('perfection', 1)}, only you come to mind{punctuation}"),
# glue::glue("The word {syn('wholesome', 1)} is synonymous with {name}{punctuation}"),
# glue::glue("{name}, you make me so {syn('happy', 1)} to be alive{punctuation}"),
# glue::glue("Your smile is {syn('contagious', 1)}, {name}{punctuation}"),
# glue::glue("{name}, you're such a {syn('beautiful', 1)} soul{punctuation}"),
# glue::glue("{name}, you should be so {syn('proud', 1)} of yourself{punctuation}"),
# glue::glue("You make a difference in this {syn('world', 1)}, {name}{punctuation}"),
# glue::glue("{name}, your {syn('kindness', 1)} is a balm to all whom encounter it{punctuation}"),
# glue::glue("{name}, I think you're {syn('perfect', 1)} just the way you are{punctuation}"),
# glue::glue("{name}, you're like {syn('sunshine', 1)} on a rainy day{punctuation}"),
# glue::glue("{name}, being around you is like a {syn('happy', 1)} vacation{punctuation}"),
# glue::glue("You're someones reason to {syn('smile', 1)}, {name}{punctuation}"),
# glue::glue("{name}, that thing you don't like about yourself is what makes you {syn('super', 1)} interesting{punctuation}"),
# glue::glue("You're {syn('inspiring', 1)} {name}{punctuation}"),
# glue::glue("{name}, you could survive a {syn('zombie', 1)} apocalypse{punctuation}"),
# glue::glue("Your {syn('creative', 1)} potential seems limitless, {name}{punctuation}"),
# glue::glue("Everyone gets knocked down sometimes {name}; only people like you get back up and keep going{punctuation}"),
# glue::glue("{name}, you are making a {syn('difference', 1)}{punctuation}"),
# glue::glue("{name}, you're an {syn('awesome', 1)} friend{punctuation}"),
# glue::glue("Someone is getting through something really hard right now, because {name}, you've got their back{punctuation}"),
# glue::glue("{name}, you're a gift that keeps on giving{punctuation}"),
# glue::glue("{name}, you are {syn('enough', 1)}{punctuation}"),
# glue::glue("You're all that {name}, plus a super sized bag of {syn('chips', 1)}{punctuation}"),
# glue::glue("{name}, you're even better than a {syn('unicorn', 1)} because you're real{punctuation}"),
# glue::glue("How {syn('amazing', 1)} are you, {name}{punctuation}")),
size=1, replace = FALSE)
compliment
}
praise("Aris", "!")
glue::glue_col("{red aris} {blue erika}")
praise <- function (name, punctuation = "!") {
compliment <- sample(c(glue::glue("You're the {syn('best', 1)}, {name}{punctuation}"),
glue::glue("You {syn('shine', 1)} brighter than a diamond, {name}{punctuation}"),
glue::glue("{name}, the world is that much {syn('better', 1)} with you in it{punctuation}"),
glue::glue("I appreciate the {syn('effort', 1)} you put in today {name}. Well done{punctuation}"),
glue::glue("There will never be another {name} {syn('like', 1)} you{punctuation}"),
glue::glue("{name}, when I think of defining {syn('perfection', 1)}, only you come to mind{punctuation}"),
glue::glue("The word {syn('wholesome', 1)} is synonymous with {name}{punctuation}"),
glue::glue("{name}, you make me so {syn('happy', 1)} to be alive{punctuation}"),
glue::glue("Your smile is {syn('contagious', 1)}, {name}{punctuation}"),
glue::glue("{name}, you're such a {syn('beautiful', 1)} soul{punctuation}"),
glue::glue("{name}, you should be so {syn('proud', 1)} of yourself{punctuation}"),
glue::glue("You make a difference in this {syn('world', 1)}, {name}{punctuation}"),
glue::glue("{name}, your {syn('kindness', 1)} is a balm to all whom encounter it{punctuation}"),
glue::glue("{name}, I think you're {syn('perfect', 1)} just the way you are{punctuation}"),
glue::glue("{name}, you're like {syn('sunshine', 1)} on a rainy day{punctuation}"),
glue::glue("{name}, being around you is like a {syn('happy', 1)} vacation{punctuation}"),
glue::glue("You're someones reason to {syn('smile', 1)}, {name}{punctuation}"),
glue::glue("{name}, that thing you don't like about yourself is what makes you {syn('super', 1)} interesting{punctuation}"),
glue::glue("You're {syn('inspiring', 1)} {name}{punctuation}"),
glue::glue("{name}, you could survive a {syn('zombie', 1)} apocalypse{punctuation}"),
glue::glue("Your {syn('creative', 1)} potential seems limitless, {name}{punctuation}"),
glue::glue("Everyone gets knocked down sometimes {name}; only people like you get back up and keep going{punctuation}"),
glue::glue("{name}, you are making a {syn('difference', 1)}{punctuation}"),
glue::glue("{name}, you're an {syn('awesome', 1)} friend{punctuation}"),
glue::glue("Someone is getting through something really hard right now, because {name}, you've got their back{punctuation}"),
glue::glue("{name}, you're a gift that keeps on giving{punctuation}"),
glue::glue("{name}, you are {syn('enough', 1)}{punctuation}"),
glue::glue("You're all that {name}, plus a super sized bag of {syn('chips', 1)}{punctuation}"),
glue::glue("{name}, you're even better than a {syn('unicorn', 1)} because you're real{punctuation}"),
glue::glue("How {syn('amazing', 1)} are you, {name}{punctuation}")),
size=1, replace = FALSE)
compliment
}
praise("alif", "$")
devtools::document()
devtools::document()
devtools::document()
library(praiseR)
install.packages("RColorBrewer")
---
title: "rladiesjkt_8"
author: "erikaris"
date: "7/18/2020"
output:
ioslides_presentation: default
slidy_presentation: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
## Why analyzing Twitter Data {.build}
- Twitter data is powerful
- enormous amount of information available --> great scope for analyzing extracted tweets and deriving insights.
## What can we get from analyzing Twitter Data {.build}
## How to get Twitter Data {.build}
- Step 1: Setup your account
- Step 2: Download/extract data
- Step 3: Analyze and visualize
## step 0: Prerequisite {.build}
Install the following required libraries.
```{r eval=FALSE}
install.packages("rtweet") # R client for accessing Twitter’s REST and stream APIs.
install.packages("wordcloud2") # for creating wordcloud
install.packages("tidyverse")  # the core of r for datascience
install.packages("tidytext")
install.packages("knitr")
install.packages("plotly")
devtools::install_github("ropenscilabs/icon") # to insert icons
- [R twitter package comparison.](https://rtweet.info/)
- While waiting for the libraries to be installed, let's setup the twitter account.
## Step 1a: Twitter API Authorization
- Have a Twitter account.
- go to [https://developer.twitter.com/en/apps](https://developer.twitter.com/en/apps)
- sign in with your Twitter's `username` and `password`.
- click the button `create an app`
- fill the required fields
- app name --> must be unique
- description
- website --> Ideally this website is where people can find more information about your app. If you don’t have one just insert a valid URL.
![](images/twitter_app.jpg)
## Step 1b: Generate Key and Token {.build}
- go to tab `keys and tokens`, hit the `Generate` button.
![](images/token.jpg)
- copy the generated `access token` and `access token secret` to a file (e.g. notepad). We'll need it later.
![](images/access_token.jpg)
- disable the pop-up blocker on your browser
## Step 1c: Create Oauth (Twitter API) token.
```{r eval=FALSE}
# create token named 'mytoken'
mytoken <- create_token( app = "mytwitterapp", # you can change the app name
consumer_key = "your consumer key",
consumer_secret = "your consumer secret",
access_token = "your access token",
access_secret = "your access token secret"
)
```
## Step 2: Downloading the Tweets {.build}
- function
```{r eval=FALSE}
stream_tweets(q = "", timeout = 30, token = NULL`
```
- extract based on keyword.
```{r eval=FALSE}
stream_tweets("covid19", timeout = 90, token = mytoken)
```
- extract based on people who tweets.
```{r eval=FALSE}
stream_tweets("realdonaldtrump", timeout = 90, token = mytoken)
```
## Explore the downloaded tweets
```{r eval=FALSE}
# View dimensions of the data frame with live tweets dim(tweets120s)
dim(tweets120s)
```
---
-Extract tweets related to a certain keyword of your interest, use function `search_tweets()`.
```{r eval=FALSE}
# Extract tweets on "#Covid_19" and include retweets
twts_covid <- search_tweets("#Covid_19", n = 2000, include_rts = TRUE,
lang = "en")
```
## What does `search_tweets()` return?
```{r eval=FALSE}
names(twts_covid)
```
## Returns:
A dataframe consist of `number_of_tweet` rows and 90 columns
```{r eval=FALSE}
> names_tweet30
[1] "user_id"                 "status_id"               "created_at"              "screen_name"             "text"
[6] "source"                  "display_text_width"      "reply_to_status_id"      "reply_to_user_id"        "reply_to_screen_name"
[11] "is_quote"                "is_retweet"              "favorite_count"          "retweet_count"           "quote_count"
[16] "reply_count"             "hashtags"                "symbols"                 "urls_url"                "urls_t.co"
[21] "urls_expanded_url"       "media_url"               "media_t.co"              "media_expanded_url"      "media_type"
[26] "ext_media_url"           "ext_media_t.co"          "ext_media_expanded_url"  "ext_media_type"          "mentions_user_id"
[31] "mentions_screen_name"    "lang"                    "quoted_status_id"        "quoted_text"             "quoted_created_at"
[36] "quoted_source"           "quoted_favorite_count"   "quoted_retweet_count"    "quoted_user_id"          "quoted_screen_name"
[41] "quoted_name"             "quoted_followers_count"  "quoted_friends_count"    "quoted_statuses_count"   "quoted_location"
[46] "quoted_description"      "quoted_verified"         "retweet_status_id"       "retweet_text"            "retweet_created_at"
[51] "retweet_source"          "retweet_favorite_count"  "retweet_retweet_count"   "retweet_user_id"         "retweet_screen_name"
[56] "retweet_name"            "retweet_followers_count" "retweet_friends_count"   "retweet_statuses_count"  "retweet_location"
[61] "retweet_description"     "retweet_verified"        "place_url"               "place_name"              "place_full_name"
[66] "place_type"              "country"                 "country_code"            "geo_coords"              "coords_coords"
[71] "bbox_coords"             "status_url"              "name"                    "location"                "description"
[76] "url"                     "protected"               "followers_count"         "friends_count"           "listed_count"
[81] "statuses_count"          "favourites_count"        "account_created_at"      "verified"                "profile_url"
[86] "profile_expanded_url"    "account_lang"            "profile_banner_url"      "profile_background_url"  "profile_image_url"
```
## Extract tweets based on people who tweets
# View output for the first 5 columns and 10 rows
head(twts_emmy[,1:5], 10)
- extrat tweets on keywords you are interested in, such as #coronavirus or #codvid19, and include retweets.
- extract words
- extract emojis
## Step 3: Analyze and Visualize
- bar chart of word frequency.
- wordcloud of text
- wordcloud of emojis
## further steps (not covered in today's meetup) {.build}
- sentiment analysis.
## References:
- [https://www.r-bloggers.com/setting-up-the-twitter-r-package-for-text-analytics/](https://www.r-bloggers.com/setting-up-the-twitter-r-package-for-text-analytics/)
- connect to the API
- install package `rtweet` and `httpuv`.
## About `rtweet` and `httpuv`
![](images/rtweet.jpg){width=100%}
![](images/httpuv.jpg){width=100%}
## Setup a Twitter Account and Create an App {.build}
1. Setup your `username` and `password` at https://twitter.com/.
2. Go to https://apps.twitter.com/ and sign in with your `username` and `password`
3. Click on `Create a new App`
---
title: "R Notebook"
output: html_notebook
---
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
Try executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*.
```{r}
install.packages("rtweet")
```
```{r}
library(rtweet)
#credentials got from the twitter API page, at the twitter developers site.
consumer_key <- "XzAx9BRBBLtP61c4huEUGYXWs"
consumer_secret<- "kMIRX7lp781kB5irYJ7GZkjxsZmbSSaG8Yw298nLgZrMUO4sOf"
access_token <- "2689318266-kkF7H12RE9HVbNUuP5zGQFclIXOqmaXTSM6v3Ys"
access_secret <- "80ut1cUHr7CoyqtXzSuNS3J86LeXLEwHHgUhuVMDcIh7p"
twitter_token <- create_token(
app = "FirstAppOneMomentAgo2",
consumer_key,
consumer_secret,
access_token = NULL,
access_secret = NULL,
set_renv = TRUE
)
```
```{r}
rt <- search_tweets(
"#EndSARS", n = 1000, include_rts = FALSE,
)
```
```{r}
#time to clean our data
#cleaning lib tm comes in action
# use install.packages("tm") to add this library
library(tm)
#convert data to UTF
newdata<- iconv(rt$text, "ASCII", "UTF-8", sub="")
#extract text from the data frame build your own corpus(a corpus is a collection of text files)
mydata <- Corpus(VectorSource(newdata))
# convert to lower case
mydata <- tm_map(mydata, content_transformer(tolower))
#remove ������ what would be emojis
mydata<-tm_map(mydata, content_transformer(gsub), pattern="\\W",replace=" ")
# remove URLs
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
mydata <- tm_map(mydata, content_transformer(removeURL)
)
# remove anything other than English letters or space
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
mydata <- tm_map(mydata, content_transformer(removeNumPunct))
# remove stopwords
mydata <- tm_map(mydata, removeWords, stopwords("english"))
#u can create custom stop words using the code below.
#myStopwords <- c(setdiff(stopwords('english'), c("r", "big")),"use", "see", "used", "via", "amp")
#mydata <- tm_map(mydata, removeWords, myStopwords)
# remove extra whitespace
mydata <- tm_map(mydata, stripWhitespace)
# Remove numbers
mydata <- tm_map(mydata, removeNumbers)
# Remove punctuations
mydata <- tm_map(mydata, removePunctuation)
# keep a copy for stem completion later
mydataCopy <- mydata
```
```{r}
#build a term document matrix
dtm <- TermDocumentMatrix(mydata)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 20)
```
```{r}
#load the necessary libraries
library(wordcloud)
library(RColorBrewer)
#draw the word cloud
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 10,max.words=500, random.order=FALSE,scale = c(3, 0.5), colors = rainbow(50))
```
Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.
When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).
The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike *Knit*, *Preview* does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.
---
title: "Data Manipulation with dplyr"
author: "Erika Siregar [&lt;&#64;erikaris&gt;](https://twitter.com/erikaris)"
date: "2/6/2020"
output: slidy_presentation
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
## Data Manipulation {.build}
- What comes up to your mind when hearing the words `Data Manipulation`?
- What you usually do to manipulate your data?
## Introducing dplyr
- R Package for manipulating data.
- a grammar of data manipulation
- `mutate()`   : adds new variables/columns that are **functions of existing variables**
- `select()`   : picks variables based on their **names**.
- `filter()`   : picks cases based on their **values**.
- `summarise()`: reduces multiple values down to a single **summary**.
- `arrange()`  : changes the **ordering** of the rows.
## Let's practice with the real dataset
1. download the `counties.rds` file from RLadies Jakarta GitHub.
2. load the data and assign it to a variable.
```{r eval = FALSE}
counties <- readRDS('/run/media/erikaris/DATA/self_learning/datacamp/R/course_33_data_manipulation_with_dplyr_in_r/counties.rds'
```
3.
## Slide with Plot
```{r pressure}
plot(pressure)
```
praise("erika", &)
praise("erika", "&")
praiseR::praise("erika", "!")
library(glue)
library(syn)
praiseR::praise("erika", "!")
install.packages("remotes")
library(remotes)
